name: Rust

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Build
      run: cargo build --verbose
      
    - name: Run tests
      run: cargo test --verbose

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get the release version from the tag
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
    - name: Build release binaries
      run: |
        cargo build --release --target x86_64-unknown-linux-gnu
        # Add more targets if needed
        # cargo build --release --target aarch64-unknown-linux-gnu
        
    - name: Create release artifacts
      run: |
        mkdir -p release
        cp target/release/ali-bastion release/
        cd release
        tar -czf ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz ali-bastion
        # Add checksums
        sha256sum ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz > ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.sha256
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz
        asset_name: ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload SHA256 Checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.sha256
        asset_name: ali-bastion-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.sha256
        asset_content_type: text/plain